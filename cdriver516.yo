                            | #######################################################################
                            | # Test for copying block of size 516;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f42026000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20402000000000000 | 	irmovq $516, %rdx		# src and dst have 516 elements
0x014: 30f67815000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f74805000000000000 | 	irmovq src, %rdi	# src array
0x028: 803b00000000000000   | 	call ncopy		 
0x031: 80dc03000000000000   | 	call check	        # Call checker code
0x03a: 00                   | 	halt                    # should halt with 0xaaaa in %rax
0x03b:                      | StartFun:
                            | # Author:李一凡 ID=2100012520@stu.pku.edu.cn
                            | # 优化思路1：将原来的“先把常数移到寄存器中再做运算”的方法改成使用iaddq实现，减少冗余；(13.70)
                            | # 优化思路2：将Always Taken的分支预测方法改成BTFNT, 提高预测准确性。不过由于现在程序中分支并不多，所以这条方法没有很大改进；(13.63)
                            | # 优化点：Y86-64处理器默认寄存器存储的是0，所以一开始的那个异或是没必要的；(13.56)
                            | # 优化点：在mrmovq和rmmovq之间插入无关痛痒的%rdi+=8，因为后一个mov在前一个访存之后才能接收到数据转发，而这造成了一个阶段的暂停。把第一遍改漏的subq也换成iaddq；(11.56)
                            | # 优化点：每次对len减一的时候总是andq判断一下再跳转，实际上跳转之前只要没有其他运算就可以了；（10.56）
                            | # 优化思路3：按len-=2展开循环。一开始先把len-2，判断有没有资格进入设计出来的Loop_double。每次从Loop_double出来都要先-2，判断有没有再次进入Loop_double的资格。
                            | # 每次发现没有进入的资格就直接跳到Once 里面。由于%rdx比2小但是每次只是减去2，所以这个部分会判断%rdx是0(直接返回到Done)还是1(按照Once中的语句再ncopy一次)；(8.73)
                            | # 优化思路4：按len-=3展开循环。与思路3类似，只是在最后跳出的判断出有差异。我选择先把由于小于3而不能进入下一次Loop_trible的%rdx先加上2，这样原来的0是负的，1是equal，2是正的。然后跳转到各自的处理模块中即可；(8.12)
                            | # 优化思路5：按len-=4展开循环。与上述过程类似，在第一个mrmov的地方利用bubble多复制一个，之后滚雪球。最后判断余数的时候，先加上3，再看大于或小于。等于只用执行一次。如果执行3次，先把最后一个复制过去，剩下两个与复制两次的用同一片代码，便于之后展开规模更大时不超字节限制；(7.90)
                            | # 优化思路6：按len-=6展开循环。处理余数的时候没什么技巧，只是加了一些数然后分成-1,0和从1开始的正数。如果不能完全分开就减一些数，仍然把他们分成-1,0,,一些正数......
                            | # 目前ncopy.yo的字节数637, 最后处理余数的环节出现了不少bubble；(7.76)
                            | # 优化思路7：按len-=8展开，与之前相似，不再赘述。由于没有找到合适的方法处理最后余数部分的的bubble，对于前面数据规模较小的测试来说反而是负优化；(7.75)
                            | # 优化思路8：利用书后题4.57提到的加载转发，合理优化mrmov和rmmov连起来的余数处理的部分；(7.63)	(同样处理但是AT分支预测CPE=7.71)
                            | 
                            | 
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x03b:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | 	# xorq %rax,%rax		# count = 0;
                            | 
                            | 
0x03b: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx
0x045: 72e601000000000000   | 	jl Last
                            | 
                            | 	
0x04e:                      | Loop_nine:	
0x04e: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x058: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11	# Destory this bubble.
0x062: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x06c: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x06e: 718100000000000000   | 	jle L1		# if so, goto L1	(Across iaddq):
0x077: c0f00100000000000000 | 	iaddq $1, %rax		# irmovq $1, %r10
                            | 						# addq %r10, %rax		# count++
0x081:                      | L1:	
0x081: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x08b: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x095: 62bb                 | 	andq %r11, %r11
0x097: 71aa00000000000000   | 	jle L2
0x0a0: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0aa:                      | L2:
0x0aa: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x0b4: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x0be: 62aa                 | 	andq %r10, %r10
0x0c0: 71d300000000000000   | 	jle L3
0x0c9: c0f00100000000000000 | 	iaddq $1, %rax
0x0d3:                      | L3:
0x0d3: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x0dd: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x0e7: 62bb                 | 	andq %r11, %r11
0x0e9: 71fc00000000000000   | 	jle L4
0x0f2: c0f00100000000000000 | 	iaddq $1, %rax
0x0fc:                      | L4:
0x0fc: 50b72800000000000000 | 	mrmovq 40(%rdi), %r11
0x106: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x110: 62aa                 | 	andq %r10, %r10
0x112: 712501000000000000   | 	jle L5
0x11b: c0f00100000000000000 | 	iaddq $1, %rax
0x125:                      | L5:
0x125: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x12f: 40b62800000000000000 | 	rmmovq %r11, 40(%rsi)
0x139: 62bb                 | 	andq %r11, %r11
0x13b: 714e01000000000000   | 	jle L6
0x144: c0f00100000000000000 | 	iaddq $1, %rax
0x14e:                      | L6:
0x14e: 50b73800000000000000 | 	mrmovq 56(%rdi), %r11
0x158: 40a63000000000000000 | 	rmmovq %r10, 48(%rsi)
0x162: 62aa                 | 	andq %r10, %r10
0x164: 717701000000000000   | 	jle L7
0x16d: c0f00100000000000000 | 	iaddq $1, %rax
0x177:                      | L7:
0x177: 50a74000000000000000 | 	mrmovq 64(%rdi), %r10
0x181: 40b63800000000000000 | 	rmmovq %r11, 56(%rsi)
0x18b: 62bb                 | 	andq %r11, %r11
0x18d: 71a001000000000000   | 	jle L8
0x196: c0f00100000000000000 | 	iaddq $1, %rax
0x1a0:                      | L8:
0x1a0: 40a64000000000000000 | 	rmmovq %r10, 64(%rsi)
0x1aa: 62aa                 | 	andq %r10, %r10
0x1ac: 71bf01000000000000   | 	jle L9
0x1b5: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1bf:                      | L9:
0x1bf: c0f74800000000000000 | 	iaddq $72, %rdi		# src += 9
0x1c9: c0f64800000000000000 | 	iaddq $72, %rsi		# dst += 9
0x1d3: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx
0x1dd: 754e00000000000000   | 	jge Loop_nine		# if %rdx >= 9, goto Loop again:
                            | 
0x1e6:                      | Last:
0x1e6: c0f20800000000000000 | 	iaddq $8, %rdx
0x1f0: 72db03000000000000   | 	jl Done
0x1f9: 762c02000000000000   | 	jg Judge_remain		# 对应着原来的2,3,4,5,6,7,8.
0x202: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x20c: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x216: 62aa                 | 	andq %r10, %r10
0x218: 71db03000000000000   | 	jle Done
0x221: c0f00100000000000000 | 	iaddq $1, %rax
0x22b: 90                   | 	ret
                            | 
0x22c:                      | Judge_remain:
0x22c: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x236: 728803000000000000   | 	jl Loop_twice
0x23f: 735f03000000000000   | 	je Loop_three
0x248: 765102000000000000   | 	jg Judge_four_to_eight
                            | 
0x251:                      | Judge_four_to_eight:
0x251: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x25b: 723603000000000000   | 	jl Loop_four
0x264: 730d03000000000000   | 	je Loop_five
0x26d: 767602000000000000   | 	jg Judge_six_eight
                            | 
0x276:                      | Judge_six_eight:
0x276: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x280: 72e402000000000000   | 	jl Loop_six
0x289: 73bb02000000000000   | 	je Loop_seven
                            | 
0x292:                      | Loop_eight:
0x292: 50a73800000000000000 | 	mrmovq 56(%rdi), %r10
0x29c: 40a63800000000000000 | 	rmmovq %r10, 56(%rsi)
0x2a6: 62aa                 | 	andq %r10, %r10
0x2a8: 71bb02000000000000   | 	jle Loop_seven
0x2b1: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x2bb:                      | Loop_seven:
0x2bb: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x2c5: 40a63000000000000000 | 	rmmovq %r10, 48(%rsi)
0x2cf: 62aa                 | 	andq %r10, %r10
0x2d1: 71e402000000000000   | 	jle Loop_six
0x2da: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x2e4:                      | Loop_six:
0x2e4: 50a72800000000000000 | 	mrmovq 40(%rdi), %r10
0x2ee: 40a62800000000000000 | 	rmmovq %r10, 40(%rsi)
0x2f8: 62aa                 | 	andq %r10, %r10
0x2fa: 710d03000000000000   | 	jle Loop_five
0x303: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x30d:                      | Loop_five:
0x30d: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x317: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x321: 62aa                 | 	andq %r10, %r10
0x323: 713603000000000000   | 	jle Loop_four
0x32c: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x336:                      | Loop_four:
0x336: 50a71800000000000000 | 	mrmovq 24(%rdi), %r10
0x340: 40a61800000000000000 | 	rmmovq %r10, 24(%rsi)
0x34a: 62aa                 | 	andq %r10, %r10
0x34c: 715f03000000000000   | 	jle Loop_three
0x355: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x35f:                      | Loop_three:
0x35f: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x369: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x373: 62aa                 | 	andq %r10, %r10
0x375: 718803000000000000   | 	jle Loop_twice
0x37e: c0f00100000000000000 | 	iaddq $1, %rax
                            | 	
                            | 
0x388:                      | Loop_twice:
0x388: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x392: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11	# Destory the bubble.
0x39c: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x3a6: 62aa                 | 	andq %r10, %r10
0x3a8: 71bb03000000000000   | 	jle Second
0x3b1: c0f00100000000000000 | 	iaddq $1, %rax
0x3bb:                      | Second:
0x3bb: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x3c5: 62bb                 | 	andq %r11, %r11
0x3c7: 71db03000000000000   | 	jle Done
0x3d0: c0f00100000000000000 | 	iaddq $1, %rax
0x3da: 90                   | 	ret
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3db:                      | Done:
0x3db: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function (AND MAKE SURE THERE IS A BLANKE LINE IN THE END!!!)
0x3dc:                      | End:
                            | #/* $end ncopy-ys */
0x3dc:                      | EndFun:
                            | #################################################################### 
                            | # Epilogue code for the correctness testing driver
                            | ####################################################################
                            | 
                            | # This is the correctness checking code.
                            | # It checks:
                            | #   1. %rax has 267.  Set %rax to 0xbbbb if not.
                            | #   2. The total length of the code is less than or equal to 1000.
                            | #      Set %rax to 0xcccc if not.
                            | #   3. The source data was copied to the destination.
                            | #      Set %rax to 0xdddd if not.
                            | #   4. The words just before and just after the destination region
                            | #      were not corrupted.  Set %rax to 0xeeee if not.
                            | # If all checks pass, then sets %rax to 0xaaaa
0x3dc:                      | check:
                            | 	# Return value test
0x3dc: 30fa0b01000000000000 | 	irmovq $267,%r10
0x3e6: 61a0                 | 	subq %r10,%rax
0x3e8: 730404000000000000   | 	je checkb
0x3f1: 30f0bbbb000000000000 | 	irmovq $0xbbbb,%rax  # Failed test #1
0x3fb: 704205000000000000   | 	jmp cdone
0x404:                      | checkb:
                            | 	# Code length check
0x404: 30f0dc03000000000000 | 	irmovq EndFun,%rax
0x40e: 30f23b00000000000000 | 	irmovq StartFun,%rdx
0x418: 6120                 | 	subq %rdx,%rax
0x41a: 30f2e803000000000000 | 	irmovq $1000,%rdx
0x424: 6102                 | 	subq %rax,%rdx
0x426: 754204000000000000   | 	jge checkm
0x42f: 30f0cccc000000000000 | 	irmovq $0xcccc,%rax  # Failed test #2
0x439: 704205000000000000   | 	jmp cdone
0x442:                      | checkm:
0x442: 30f27815000000000000 | 	irmovq dest, %rdx # Pointer to next destination location
0x44c: 30f34805000000000000 | 	irmovq src,%rbx   # Pointer to next source location
0x456: 30f70402000000000000 | 	irmovq $516,%rdi  # Count
0x460: 6277                 | 	andq %rdi,%rdi
0x462: 73c004000000000000   | 	je checkpre         # Skip check if count = 0
0x46b:                      | mcloop:
0x46b: 50020000000000000000 | 	mrmovq (%rdx),%rax
0x475: 50630000000000000000 | 	mrmovq (%rbx),%rsi
0x47f: 6160                 | 	subq %rsi,%rax
0x481: 739d04000000000000   | 	je  mok
0x48a: 30f0dddd000000000000 | 	irmovq $0xdddd,%rax # Failed test #3
0x494: 704205000000000000   | 	jmp cdone
0x49d:                      | mok:
0x49d: 30f00800000000000000 | 	irmovq $8,%rax
0x4a7: 6002                 | 	addq %rax,%rdx	  # dest ++
0x4a9: 6003                 | 	addq %rax,%rbx    # src++
0x4ab: 30f00100000000000000 | 	irmovq $1,%rax
0x4b5: 6107                 | 	subq %rax,%rdi    # cnt--
0x4b7: 766b04000000000000   | 	jg mcloop
0x4c0:                      | checkpre:
                            | 	# Check for corruption
0x4c0: 30f27015000000000000 | 	irmovq Predest,%rdx
0x4ca: 50020000000000000000 | 	mrmovq (%rdx), %rax  # Get word before destination
0x4d4: 30f2fadebc0000000000 | 	irmovq $0xbcdefa, %rdx
0x4de: 6120                 | 	subq %rdx,%rax
0x4e0: 73fc04000000000000   | 	je checkpost
0x4e9: 30f0eeee000000000000 | 	irmovq $0xeeee,%rax  # Failed test #4
0x4f3: 704205000000000000   | 	jmp cdone
0x4fc:                      | checkpost:
                            | 	# Check for corruption
0x4fc: 30f29825000000000000 | 	irmovq Postdest,%rdx
0x506: 50020000000000000000 | 	mrmovq (%rdx), %rax  # Get word after destination
0x510: 30f2bcfade0000000000 | 	irmovq $0xdefabc, %rdx
0x51a: 6120                 | 	subq %rdx,%rax
0x51c: 733805000000000000   | 	je checkok
0x525: 30f0eeee000000000000 | 	irmovq $0xeeee,%rax # Failed test #4
0x52f: 704205000000000000   | 	jmp cdone
0x538:                      | checkok:
                            | 	# Successful checks
0x538: 30f0aaaa000000000000 | 	irmovq $0xaaaa,%rax
0x542:                      | cdone:
0x542: 90                   | 	ret
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x548:                      | 	.align 8
0x548:                      | src:
0x548: 0100000000000000     | 	.quad 1
0x550: 0200000000000000     | 	.quad 2
0x558: fdffffffffffffff     | 	.quad -3
0x560: fcffffffffffffff     | 	.quad -4
0x568: 0500000000000000     | 	.quad 5
0x570: faffffffffffffff     | 	.quad -6
0x578: f9ffffffffffffff     | 	.quad -7
0x580: 0800000000000000     | 	.quad 8
0x588: 0900000000000000     | 	.quad 9
0x590: f6ffffffffffffff     | 	.quad -10
0x598: 0b00000000000000     | 	.quad 11
0x5a0: 0c00000000000000     | 	.quad 12
0x5a8: 0d00000000000000     | 	.quad 13
0x5b0: f2ffffffffffffff     | 	.quad -14
0x5b8: 0f00000000000000     | 	.quad 15
0x5c0: f0ffffffffffffff     | 	.quad -16
0x5c8: efffffffffffffff     | 	.quad -17
0x5d0: eeffffffffffffff     | 	.quad -18
0x5d8: 1300000000000000     | 	.quad 19
0x5e0: 1400000000000000     | 	.quad 20
0x5e8: 1500000000000000     | 	.quad 21
0x5f0: eaffffffffffffff     | 	.quad -22
0x5f8: e9ffffffffffffff     | 	.quad -23
0x600: 1800000000000000     | 	.quad 24
0x608: 1900000000000000     | 	.quad 25
0x610: e6ffffffffffffff     | 	.quad -26
0x618: e5ffffffffffffff     | 	.quad -27
0x620: 1c00000000000000     | 	.quad 28
0x628: 1d00000000000000     | 	.quad 29
0x630: e2ffffffffffffff     | 	.quad -30
0x638: e1ffffffffffffff     | 	.quad -31
0x640: e0ffffffffffffff     | 	.quad -32
0x648: 2100000000000000     | 	.quad 33
0x650: 2200000000000000     | 	.quad 34
0x658: ddffffffffffffff     | 	.quad -35
0x660: dcffffffffffffff     | 	.quad -36
0x668: dbffffffffffffff     | 	.quad -37
0x670: daffffffffffffff     | 	.quad -38
0x678: 2700000000000000     | 	.quad 39
0x680: d8ffffffffffffff     | 	.quad -40
0x688: 2900000000000000     | 	.quad 41
0x690: d6ffffffffffffff     | 	.quad -42
0x698: d5ffffffffffffff     | 	.quad -43
0x6a0: 2c00000000000000     | 	.quad 44
0x6a8: d3ffffffffffffff     | 	.quad -45
0x6b0: 2e00000000000000     | 	.quad 46
0x6b8: 2f00000000000000     | 	.quad 47
0x6c0: d0ffffffffffffff     | 	.quad -48
0x6c8: 3100000000000000     | 	.quad 49
0x6d0: 3200000000000000     | 	.quad 50
0x6d8: 3300000000000000     | 	.quad 51
0x6e0: 3400000000000000     | 	.quad 52
0x6e8: 3500000000000000     | 	.quad 53
0x6f0: 3600000000000000     | 	.quad 54
0x6f8: c9ffffffffffffff     | 	.quad -55
0x700: c8ffffffffffffff     | 	.quad -56
0x708: c7ffffffffffffff     | 	.quad -57
0x710: c6ffffffffffffff     | 	.quad -58
0x718: 3b00000000000000     | 	.quad 59
0x720: 3c00000000000000     | 	.quad 60
0x728: c3ffffffffffffff     | 	.quad -61
0x730: c2ffffffffffffff     | 	.quad -62
0x738: c1ffffffffffffff     | 	.quad -63
0x740: 4000000000000000     | 	.quad 64
0x748: bfffffffffffffff     | 	.quad -65
0x750: beffffffffffffff     | 	.quad -66
0x758: 4300000000000000     | 	.quad 67
0x760: bcffffffffffffff     | 	.quad -68
0x768: bbffffffffffffff     | 	.quad -69
0x770: 4600000000000000     | 	.quad 70
0x778: 4700000000000000     | 	.quad 71
0x780: 4800000000000000     | 	.quad 72
0x788: 4900000000000000     | 	.quad 73
0x790: 4a00000000000000     | 	.quad 74
0x798: 4b00000000000000     | 	.quad 75
0x7a0: b4ffffffffffffff     | 	.quad -76
0x7a8: b3ffffffffffffff     | 	.quad -77
0x7b0: 4e00000000000000     | 	.quad 78
0x7b8: b1ffffffffffffff     | 	.quad -79
0x7c0: 5000000000000000     | 	.quad 80
0x7c8: 5100000000000000     | 	.quad 81
0x7d0: aeffffffffffffff     | 	.quad -82
0x7d8: 5300000000000000     | 	.quad 83
0x7e0: 5400000000000000     | 	.quad 84
0x7e8: abffffffffffffff     | 	.quad -85
0x7f0: 5600000000000000     | 	.quad 86
0x7f8: 5700000000000000     | 	.quad 87
0x800: a8ffffffffffffff     | 	.quad -88
0x808: a7ffffffffffffff     | 	.quad -89
0x810: a6ffffffffffffff     | 	.quad -90
0x818: a5ffffffffffffff     | 	.quad -91
0x820: a4ffffffffffffff     | 	.quad -92
0x828: 5d00000000000000     | 	.quad 93
0x830: a2ffffffffffffff     | 	.quad -94
0x838: 5f00000000000000     | 	.quad 95
0x840: a0ffffffffffffff     | 	.quad -96
0x848: 6100000000000000     | 	.quad 97
0x850: 6200000000000000     | 	.quad 98
0x858: 9dffffffffffffff     | 	.quad -99
0x860: 6400000000000000     | 	.quad 100
0x868: 9bffffffffffffff     | 	.quad -101
0x870: 6600000000000000     | 	.quad 102
0x878: 99ffffffffffffff     | 	.quad -103
0x880: 98ffffffffffffff     | 	.quad -104
0x888: 97ffffffffffffff     | 	.quad -105
0x890: 96ffffffffffffff     | 	.quad -106
0x898: 6b00000000000000     | 	.quad 107
0x8a0: 6c00000000000000     | 	.quad 108
0x8a8: 6d00000000000000     | 	.quad 109
0x8b0: 92ffffffffffffff     | 	.quad -110
0x8b8: 91ffffffffffffff     | 	.quad -111
0x8c0: 7000000000000000     | 	.quad 112
0x8c8: 8fffffffffffffff     | 	.quad -113
0x8d0: 8effffffffffffff     | 	.quad -114
0x8d8: 7300000000000000     | 	.quad 115
0x8e0: 8cffffffffffffff     | 	.quad -116
0x8e8: 8bffffffffffffff     | 	.quad -117
0x8f0: 8affffffffffffff     | 	.quad -118
0x8f8: 7700000000000000     | 	.quad 119
0x900: 88ffffffffffffff     | 	.quad -120
0x908: 7900000000000000     | 	.quad 121
0x910: 7a00000000000000     | 	.quad 122
0x918: 7b00000000000000     | 	.quad 123
0x920: 84ffffffffffffff     | 	.quad -124
0x928: 83ffffffffffffff     | 	.quad -125
0x930: 82ffffffffffffff     | 	.quad -126
0x938: 7f00000000000000     | 	.quad 127
0x940: 8000000000000000     | 	.quad 128
0x948: 7fffffffffffffff     | 	.quad -129
0x950: 7effffffffffffff     | 	.quad -130
0x958: 7dffffffffffffff     | 	.quad -131
0x960: 7cffffffffffffff     | 	.quad -132
0x968: 8500000000000000     | 	.quad 133
0x970: 7affffffffffffff     | 	.quad -134
0x978: 79ffffffffffffff     | 	.quad -135
0x980: 8800000000000000     | 	.quad 136
0x988: 8900000000000000     | 	.quad 137
0x990: 76ffffffffffffff     | 	.quad -138
0x998: 75ffffffffffffff     | 	.quad -139
0x9a0: 74ffffffffffffff     | 	.quad -140
0x9a8: 8d00000000000000     | 	.quad 141
0x9b0: 72ffffffffffffff     | 	.quad -142
0x9b8: 71ffffffffffffff     | 	.quad -143
0x9c0: 9000000000000000     | 	.quad 144
0x9c8: 9100000000000000     | 	.quad 145
0x9d0: 9200000000000000     | 	.quad 146
0x9d8: 6dffffffffffffff     | 	.quad -147
0x9e0: 9400000000000000     | 	.quad 148
0x9e8: 9500000000000000     | 	.quad 149
0x9f0: 9600000000000000     | 	.quad 150
0x9f8: 9700000000000000     | 	.quad 151
0xa00: 9800000000000000     | 	.quad 152
0xa08: 67ffffffffffffff     | 	.quad -153
0xa10: 9a00000000000000     | 	.quad 154
0xa18: 9b00000000000000     | 	.quad 155
0xa20: 9c00000000000000     | 	.quad 156
0xa28: 63ffffffffffffff     | 	.quad -157
0xa30: 62ffffffffffffff     | 	.quad -158
0xa38: 9f00000000000000     | 	.quad 159
0xa40: 60ffffffffffffff     | 	.quad -160
0xa48: a100000000000000     | 	.quad 161
0xa50: a200000000000000     | 	.quad 162
0xa58: 5dffffffffffffff     | 	.quad -163
0xa60: 5cffffffffffffff     | 	.quad -164
0xa68: a500000000000000     | 	.quad 165
0xa70: 5affffffffffffff     | 	.quad -166
0xa78: 59ffffffffffffff     | 	.quad -167
0xa80: 58ffffffffffffff     | 	.quad -168
0xa88: 57ffffffffffffff     | 	.quad -169
0xa90: 56ffffffffffffff     | 	.quad -170
0xa98: ab00000000000000     | 	.quad 171
0xaa0: 54ffffffffffffff     | 	.quad -172
0xaa8: 53ffffffffffffff     | 	.quad -173
0xab0: ae00000000000000     | 	.quad 174
0xab8: af00000000000000     | 	.quad 175
0xac0: 50ffffffffffffff     | 	.quad -176
0xac8: b100000000000000     | 	.quad 177
0xad0: b200000000000000     | 	.quad 178
0xad8: b300000000000000     | 	.quad 179
0xae0: b400000000000000     | 	.quad 180
0xae8: 4bffffffffffffff     | 	.quad -181
0xaf0: b600000000000000     | 	.quad 182
0xaf8: b700000000000000     | 	.quad 183
0xb00: 48ffffffffffffff     | 	.quad -184
0xb08: b900000000000000     | 	.quad 185
0xb10: 46ffffffffffffff     | 	.quad -186
0xb18: 45ffffffffffffff     | 	.quad -187
0xb20: bc00000000000000     | 	.quad 188
0xb28: 43ffffffffffffff     | 	.quad -189
0xb30: 42ffffffffffffff     | 	.quad -190
0xb38: 41ffffffffffffff     | 	.quad -191
0xb40: 40ffffffffffffff     | 	.quad -192
0xb48: c100000000000000     | 	.quad 193
0xb50: c200000000000000     | 	.quad 194
0xb58: c300000000000000     | 	.quad 195
0xb60: c400000000000000     | 	.quad 196
0xb68: c500000000000000     | 	.quad 197
0xb70: 3affffffffffffff     | 	.quad -198
0xb78: 39ffffffffffffff     | 	.quad -199
0xb80: c800000000000000     | 	.quad 200
0xb88: c900000000000000     | 	.quad 201
0xb90: ca00000000000000     | 	.quad 202
0xb98: cb00000000000000     | 	.quad 203
0xba0: cc00000000000000     | 	.quad 204
0xba8: 33ffffffffffffff     | 	.quad -205
0xbb0: ce00000000000000     | 	.quad 206
0xbb8: cf00000000000000     | 	.quad 207
0xbc0: 30ffffffffffffff     | 	.quad -208
0xbc8: d100000000000000     | 	.quad 209
0xbd0: 2effffffffffffff     | 	.quad -210
0xbd8: d300000000000000     | 	.quad 211
0xbe0: d400000000000000     | 	.quad 212
0xbe8: d500000000000000     | 	.quad 213
0xbf0: d600000000000000     | 	.quad 214
0xbf8: 29ffffffffffffff     | 	.quad -215
0xc00: 28ffffffffffffff     | 	.quad -216
0xc08: d900000000000000     | 	.quad 217
0xc10: 26ffffffffffffff     | 	.quad -218
0xc18: 25ffffffffffffff     | 	.quad -219
0xc20: 24ffffffffffffff     | 	.quad -220
0xc28: 23ffffffffffffff     | 	.quad -221
0xc30: de00000000000000     | 	.quad 222
0xc38: df00000000000000     | 	.quad 223
0xc40: e000000000000000     | 	.quad 224
0xc48: e100000000000000     | 	.quad 225
0xc50: e200000000000000     | 	.quad 226
0xc58: e300000000000000     | 	.quad 227
0xc60: 1cffffffffffffff     | 	.quad -228
0xc68: e500000000000000     | 	.quad 229
0xc70: e600000000000000     | 	.quad 230
0xc78: e700000000000000     | 	.quad 231
0xc80: e800000000000000     | 	.quad 232
0xc88: e900000000000000     | 	.quad 233
0xc90: 16ffffffffffffff     | 	.quad -234
0xc98: eb00000000000000     | 	.quad 235
0xca0: ec00000000000000     | 	.quad 236
0xca8: 13ffffffffffffff     | 	.quad -237
0xcb0: ee00000000000000     | 	.quad 238
0xcb8: 11ffffffffffffff     | 	.quad -239
0xcc0: f000000000000000     | 	.quad 240
0xcc8: f100000000000000     | 	.quad 241
0xcd0: 0effffffffffffff     | 	.quad -242
0xcd8: 0dffffffffffffff     | 	.quad -243
0xce0: 0cffffffffffffff     | 	.quad -244
0xce8: f500000000000000     | 	.quad 245
0xcf0: 0affffffffffffff     | 	.quad -246
0xcf8: 09ffffffffffffff     | 	.quad -247
0xd00: f800000000000000     | 	.quad 248
0xd08: f900000000000000     | 	.quad 249
0xd10: fa00000000000000     | 	.quad 250
0xd18: fb00000000000000     | 	.quad 251
0xd20: 04ffffffffffffff     | 	.quad -252
0xd28: fd00000000000000     | 	.quad 253
0xd30: 02ffffffffffffff     | 	.quad -254
0xd38: 01ffffffffffffff     | 	.quad -255
0xd40: 0001000000000000     | 	.quad 256
0xd48: 0101000000000000     | 	.quad 257
0xd50: 0201000000000000     | 	.quad 258
0xd58: 0301000000000000     | 	.quad 259
0xd60: 0401000000000000     | 	.quad 260
0xd68: 0501000000000000     | 	.quad 261
0xd70: fafeffffffffffff     | 	.quad -262
0xd78: 0701000000000000     | 	.quad 263
0xd80: 0801000000000000     | 	.quad 264
0xd88: f7feffffffffffff     | 	.quad -265
0xd90: 0a01000000000000     | 	.quad 266
0xd98: f5feffffffffffff     | 	.quad -267
0xda0: 0c01000000000000     | 	.quad 268
0xda8: 0d01000000000000     | 	.quad 269
0xdb0: f2feffffffffffff     | 	.quad -270
0xdb8: 0f01000000000000     | 	.quad 271
0xdc0: 1001000000000000     | 	.quad 272
0xdc8: effeffffffffffff     | 	.quad -273
0xdd0: 1201000000000000     | 	.quad 274
0xdd8: 1301000000000000     | 	.quad 275
0xde0: ecfeffffffffffff     | 	.quad -276
0xde8: 1501000000000000     | 	.quad 277
0xdf0: eafeffffffffffff     | 	.quad -278
0xdf8: 1701000000000000     | 	.quad 279
0xe00: 1801000000000000     | 	.quad 280
0xe08: e7feffffffffffff     | 	.quad -281
0xe10: e6feffffffffffff     | 	.quad -282
0xe18: e5feffffffffffff     | 	.quad -283
0xe20: e4feffffffffffff     | 	.quad -284
0xe28: e3feffffffffffff     | 	.quad -285
0xe30: e2feffffffffffff     | 	.quad -286
0xe38: e1feffffffffffff     | 	.quad -287
0xe40: 2001000000000000     | 	.quad 288
0xe48: 2101000000000000     | 	.quad 289
0xe50: 2201000000000000     | 	.quad 290
0xe58: ddfeffffffffffff     | 	.quad -291
0xe60: dcfeffffffffffff     | 	.quad -292
0xe68: 2501000000000000     | 	.quad 293
0xe70: dafeffffffffffff     | 	.quad -294
0xe78: 2701000000000000     | 	.quad 295
0xe80: d8feffffffffffff     | 	.quad -296
0xe88: 2901000000000000     | 	.quad 297
0xe90: 2a01000000000000     | 	.quad 298
0xe98: d5feffffffffffff     | 	.quad -299
0xea0: d4feffffffffffff     | 	.quad -300
0xea8: d3feffffffffffff     | 	.quad -301
0xeb0: d2feffffffffffff     | 	.quad -302
0xeb8: d1feffffffffffff     | 	.quad -303
0xec0: 3001000000000000     | 	.quad 304
0xec8: cffeffffffffffff     | 	.quad -305
0xed0: 3201000000000000     | 	.quad 306
0xed8: 3301000000000000     | 	.quad 307
0xee0: 3401000000000000     | 	.quad 308
0xee8: cbfeffffffffffff     | 	.quad -309
0xef0: cafeffffffffffff     | 	.quad -310
0xef8: 3701000000000000     | 	.quad 311
0xf00: c8feffffffffffff     | 	.quad -312
0xf08: c7feffffffffffff     | 	.quad -313
0xf10: 3a01000000000000     | 	.quad 314
0xf18: 3b01000000000000     | 	.quad 315
0xf20: 3c01000000000000     | 	.quad 316
0xf28: 3d01000000000000     | 	.quad 317
0xf30: c2feffffffffffff     | 	.quad -318
0xf38: 3f01000000000000     | 	.quad 319
0xf40: 4001000000000000     | 	.quad 320
0xf48: 4101000000000000     | 	.quad 321
0xf50: befeffffffffffff     | 	.quad -322
0xf58: bdfeffffffffffff     | 	.quad -323
0xf60: bcfeffffffffffff     | 	.quad -324
0xf68: 4501000000000000     | 	.quad 325
0xf70: bafeffffffffffff     | 	.quad -326
0xf78: 4701000000000000     | 	.quad 327
0xf80: 4801000000000000     | 	.quad 328
0xf88: b7feffffffffffff     | 	.quad -329
0xf90: b6feffffffffffff     | 	.quad -330
0xf98: b5feffffffffffff     | 	.quad -331
0xfa0: b4feffffffffffff     | 	.quad -332
0xfa8: b3feffffffffffff     | 	.quad -333
0xfb0: 4e01000000000000     | 	.quad 334
0xfb8: 4f01000000000000     | 	.quad 335
0xfc0: 5001000000000000     | 	.quad 336
0xfc8: affeffffffffffff     | 	.quad -337
0xfd0: 5201000000000000     | 	.quad 338
0xfd8: adfeffffffffffff     | 	.quad -339
0xfe0: 5401000000000000     | 	.quad 340
0xfe8: abfeffffffffffff     | 	.quad -341
0xff0: 5601000000000000     | 	.quad 342
0xff8: a9feffffffffffff     | 	.quad -343
0x1000:5801000000000000      | 	.quad 344
0x1008:a7feffffffffffff      | 	.quad -345
0x1010:5a01000000000000      | 	.quad 346
0x1018:a5feffffffffffff      | 	.quad -347
0x1020:a4feffffffffffff      | 	.quad -348
0x1028:a3feffffffffffff      | 	.quad -349
0x1030:5e01000000000000      | 	.quad 350
0x1038:5f01000000000000      | 	.quad 351
0x1040:a0feffffffffffff      | 	.quad -352
0x1048:6101000000000000      | 	.quad 353
0x1050:9efeffffffffffff      | 	.quad -354
0x1058:9dfeffffffffffff      | 	.quad -355
0x1060:9cfeffffffffffff      | 	.quad -356
0x1068:6501000000000000      | 	.quad 357
0x1070:9afeffffffffffff      | 	.quad -358
0x1078:99feffffffffffff      | 	.quad -359
0x1080:98feffffffffffff      | 	.quad -360
0x1088:97feffffffffffff      | 	.quad -361
0x1090:96feffffffffffff      | 	.quad -362
0x1098:95feffffffffffff      | 	.quad -363
0x10a0:6c01000000000000      | 	.quad 364
0x10a8:93feffffffffffff      | 	.quad -365
0x10b0:92feffffffffffff      | 	.quad -366
0x10b8:91feffffffffffff      | 	.quad -367
0x10c0:7001000000000000      | 	.quad 368
0x10c8:8ffeffffffffffff      | 	.quad -369
0x10d0:7201000000000000      | 	.quad 370
0x10d8:8dfeffffffffffff      | 	.quad -371
0x10e0:7401000000000000      | 	.quad 372
0x10e8:7501000000000000      | 	.quad 373
0x10f0:7601000000000000      | 	.quad 374
0x10f8:7701000000000000      | 	.quad 375
0x1100:88feffffffffffff      | 	.quad -376
0x1108:7901000000000000      | 	.quad 377
0x1110:7a01000000000000      | 	.quad 378
0x1118:7b01000000000000      | 	.quad 379
0x1120:7c01000000000000      | 	.quad 380
0x1128:7d01000000000000      | 	.quad 381
0x1130:7e01000000000000      | 	.quad 382
0x1138:81feffffffffffff      | 	.quad -383
0x1140:8001000000000000      | 	.quad 384
0x1148:8101000000000000      | 	.quad 385
0x1150:7efeffffffffffff      | 	.quad -386
0x1158:7dfeffffffffffff      | 	.quad -387
0x1160:8401000000000000      | 	.quad 388
0x1168:7bfeffffffffffff      | 	.quad -389
0x1170:8601000000000000      | 	.quad 390
0x1178:79feffffffffffff      | 	.quad -391
0x1180:8801000000000000      | 	.quad 392
0x1188:8901000000000000      | 	.quad 393
0x1190:8a01000000000000      | 	.quad 394
0x1198:8b01000000000000      | 	.quad 395
0x11a0:8c01000000000000      | 	.quad 396
0x11a8:73feffffffffffff      | 	.quad -397
0x11b0:8e01000000000000      | 	.quad 398
0x11b8:71feffffffffffff      | 	.quad -399
0x11c0:9001000000000000      | 	.quad 400
0x11c8:6ffeffffffffffff      | 	.quad -401
0x11d0:9201000000000000      | 	.quad 402
0x11d8:9301000000000000      | 	.quad 403
0x11e0:9401000000000000      | 	.quad 404
0x11e8:9501000000000000      | 	.quad 405
0x11f0:9601000000000000      | 	.quad 406
0x11f8:69feffffffffffff      | 	.quad -407
0x1200:68feffffffffffff      | 	.quad -408
0x1208:9901000000000000      | 	.quad 409
0x1210:66feffffffffffff      | 	.quad -410
0x1218:9b01000000000000      | 	.quad 411
0x1220:64feffffffffffff      | 	.quad -412
0x1228:9d01000000000000      | 	.quad 413
0x1230:62feffffffffffff      | 	.quad -414
0x1238:9f01000000000000      | 	.quad 415
0x1240:60feffffffffffff      | 	.quad -416
0x1248:5ffeffffffffffff      | 	.quad -417
0x1250:a201000000000000      | 	.quad 418
0x1258:a301000000000000      | 	.quad 419
0x1260:5cfeffffffffffff      | 	.quad -420
0x1268:a501000000000000      | 	.quad 421
0x1270:5afeffffffffffff      | 	.quad -422
0x1278:59feffffffffffff      | 	.quad -423
0x1280:58feffffffffffff      | 	.quad -424
0x1288:57feffffffffffff      | 	.quad -425
0x1290:56feffffffffffff      | 	.quad -426
0x1298:55feffffffffffff      | 	.quad -427
0x12a0:ac01000000000000      | 	.quad 428
0x12a8:ad01000000000000      | 	.quad 429
0x12b0:ae01000000000000      | 	.quad 430
0x12b8:af01000000000000      | 	.quad 431
0x12c0:50feffffffffffff      | 	.quad -432
0x12c8:4ffeffffffffffff      | 	.quad -433
0x12d0:b201000000000000      | 	.quad 434
0x12d8:b301000000000000      | 	.quad 435
0x12e0:b401000000000000      | 	.quad 436
0x12e8:4bfeffffffffffff      | 	.quad -437
0x12f0:4afeffffffffffff      | 	.quad -438
0x12f8:b701000000000000      | 	.quad 439
0x1300:48feffffffffffff      | 	.quad -440
0x1308:47feffffffffffff      | 	.quad -441
0x1310:ba01000000000000      | 	.quad 442
0x1318:bb01000000000000      | 	.quad 443
0x1320:bc01000000000000      | 	.quad 444
0x1328:bd01000000000000      | 	.quad 445
0x1330:42feffffffffffff      | 	.quad -446
0x1338:41feffffffffffff      | 	.quad -447
0x1340:40feffffffffffff      | 	.quad -448
0x1348:c101000000000000      | 	.quad 449
0x1350:c201000000000000      | 	.quad 450
0x1358:c301000000000000      | 	.quad 451
0x1360:3cfeffffffffffff      | 	.quad -452
0x1368:3bfeffffffffffff      | 	.quad -453
0x1370:c601000000000000      | 	.quad 454
0x1378:39feffffffffffff      | 	.quad -455
0x1380:c801000000000000      | 	.quad 456
0x1388:c901000000000000      | 	.quad 457
0x1390:ca01000000000000      | 	.quad 458
0x1398:35feffffffffffff      | 	.quad -459
0x13a0:34feffffffffffff      | 	.quad -460
0x13a8:cd01000000000000      | 	.quad 461
0x13b0:32feffffffffffff      | 	.quad -462
0x13b8:31feffffffffffff      | 	.quad -463
0x13c0:30feffffffffffff      | 	.quad -464
0x13c8:d101000000000000      | 	.quad 465
0x13d0:2efeffffffffffff      | 	.quad -466
0x13d8:2dfeffffffffffff      | 	.quad -467
0x13e0:d401000000000000      | 	.quad 468
0x13e8:2bfeffffffffffff      | 	.quad -469
0x13f0:2afeffffffffffff      | 	.quad -470
0x13f8:d701000000000000      | 	.quad 471
0x1400:d801000000000000      | 	.quad 472
0x1408:27feffffffffffff      | 	.quad -473
0x1410:da01000000000000      | 	.quad 474
0x1418:25feffffffffffff      | 	.quad -475
0x1420:24feffffffffffff      | 	.quad -476
0x1428:23feffffffffffff      | 	.quad -477
0x1430:de01000000000000      | 	.quad 478
0x1438:21feffffffffffff      | 	.quad -479
0x1440:e001000000000000      | 	.quad 480
0x1448:1ffeffffffffffff      | 	.quad -481
0x1450:1efeffffffffffff      | 	.quad -482
0x1458:1dfeffffffffffff      | 	.quad -483
0x1460:e401000000000000      | 	.quad 484
0x1468:e501000000000000      | 	.quad 485
0x1470:1afeffffffffffff      | 	.quad -486
0x1478:19feffffffffffff      | 	.quad -487
0x1480:18feffffffffffff      | 	.quad -488
0x1488:17feffffffffffff      | 	.quad -489
0x1490:ea01000000000000      | 	.quad 490
0x1498:eb01000000000000      | 	.quad 491
0x14a0:14feffffffffffff      | 	.quad -492
0x14a8:ed01000000000000      | 	.quad 493
0x14b0:12feffffffffffff      | 	.quad -494
0x14b8:ef01000000000000      | 	.quad 495
0x14c0:10feffffffffffff      | 	.quad -496
0x14c8:f101000000000000      | 	.quad 497
0x14d0:f201000000000000      | 	.quad 498
0x14d8:f301000000000000      | 	.quad 499
0x14e0:f401000000000000      | 	.quad 500
0x14e8:f501000000000000      | 	.quad 501
0x14f0:0afeffffffffffff      | 	.quad -502
0x14f8:f701000000000000      | 	.quad 503
0x1500:f801000000000000      | 	.quad 504
0x1508:f901000000000000      | 	.quad 505
0x1510:fa01000000000000      | 	.quad 506
0x1518:fb01000000000000      | 	.quad 507
0x1520:04feffffffffffff      | 	.quad -508
0x1528:fd01000000000000      | 	.quad 509
0x1530:02feffffffffffff      | 	.quad -510
0x1538:01feffffffffffff      | 	.quad -511
0x1540:0002000000000000      | 	.quad 512
0x1548:fffdffffffffffff      | 	.quad -513
0x1550:0202000000000000      | 	.quad 514
0x1558:fdfdffffffffffff      | 	.quad -515
0x1560:fcfdffffffffffff      | 	.quad -516
0x1568:fadebc0000000000      | 	.quad 0xbcdefa # This shouldn't get moved
                             | 
0x1570:                      | 	.align 16
0x1570:                      | Predest:
0x1570:fadebc0000000000      | 	.quad 0xbcdefa
0x1578:                      | dest:
0x1578:abefcd0000000000      | 	.quad 0xcdefab
0x1580:abefcd0000000000      | 	.quad 0xcdefab
0x1588:abefcd0000000000      | 	.quad 0xcdefab
0x1590:abefcd0000000000      | 	.quad 0xcdefab
0x1598:abefcd0000000000      | 	.quad 0xcdefab
0x15a0:abefcd0000000000      | 	.quad 0xcdefab
0x15a8:abefcd0000000000      | 	.quad 0xcdefab
0x15b0:abefcd0000000000      | 	.quad 0xcdefab
0x15b8:abefcd0000000000      | 	.quad 0xcdefab
0x15c0:abefcd0000000000      | 	.quad 0xcdefab
0x15c8:abefcd0000000000      | 	.quad 0xcdefab
0x15d0:abefcd0000000000      | 	.quad 0xcdefab
0x15d8:abefcd0000000000      | 	.quad 0xcdefab
0x15e0:abefcd0000000000      | 	.quad 0xcdefab
0x15e8:abefcd0000000000      | 	.quad 0xcdefab
0x15f0:abefcd0000000000      | 	.quad 0xcdefab
0x15f8:abefcd0000000000      | 	.quad 0xcdefab
0x1600:abefcd0000000000      | 	.quad 0xcdefab
0x1608:abefcd0000000000      | 	.quad 0xcdefab
0x1610:abefcd0000000000      | 	.quad 0xcdefab
0x1618:abefcd0000000000      | 	.quad 0xcdefab
0x1620:abefcd0000000000      | 	.quad 0xcdefab
0x1628:abefcd0000000000      | 	.quad 0xcdefab
0x1630:abefcd0000000000      | 	.quad 0xcdefab
0x1638:abefcd0000000000      | 	.quad 0xcdefab
0x1640:abefcd0000000000      | 	.quad 0xcdefab
0x1648:abefcd0000000000      | 	.quad 0xcdefab
0x1650:abefcd0000000000      | 	.quad 0xcdefab
0x1658:abefcd0000000000      | 	.quad 0xcdefab
0x1660:abefcd0000000000      | 	.quad 0xcdefab
0x1668:abefcd0000000000      | 	.quad 0xcdefab
0x1670:abefcd0000000000      | 	.quad 0xcdefab
0x1678:abefcd0000000000      | 	.quad 0xcdefab
0x1680:abefcd0000000000      | 	.quad 0xcdefab
0x1688:abefcd0000000000      | 	.quad 0xcdefab
0x1690:abefcd0000000000      | 	.quad 0xcdefab
0x1698:abefcd0000000000      | 	.quad 0xcdefab
0x16a0:abefcd0000000000      | 	.quad 0xcdefab
0x16a8:abefcd0000000000      | 	.quad 0xcdefab
0x16b0:abefcd0000000000      | 	.quad 0xcdefab
0x16b8:abefcd0000000000      | 	.quad 0xcdefab
0x16c0:abefcd0000000000      | 	.quad 0xcdefab
0x16c8:abefcd0000000000      | 	.quad 0xcdefab
0x16d0:abefcd0000000000      | 	.quad 0xcdefab
0x16d8:abefcd0000000000      | 	.quad 0xcdefab
0x16e0:abefcd0000000000      | 	.quad 0xcdefab
0x16e8:abefcd0000000000      | 	.quad 0xcdefab
0x16f0:abefcd0000000000      | 	.quad 0xcdefab
0x16f8:abefcd0000000000      | 	.quad 0xcdefab
0x1700:abefcd0000000000      | 	.quad 0xcdefab
0x1708:abefcd0000000000      | 	.quad 0xcdefab
0x1710:abefcd0000000000      | 	.quad 0xcdefab
0x1718:abefcd0000000000      | 	.quad 0xcdefab
0x1720:abefcd0000000000      | 	.quad 0xcdefab
0x1728:abefcd0000000000      | 	.quad 0xcdefab
0x1730:abefcd0000000000      | 	.quad 0xcdefab
0x1738:abefcd0000000000      | 	.quad 0xcdefab
0x1740:abefcd0000000000      | 	.quad 0xcdefab
0x1748:abefcd0000000000      | 	.quad 0xcdefab
0x1750:abefcd0000000000      | 	.quad 0xcdefab
0x1758:abefcd0000000000      | 	.quad 0xcdefab
0x1760:abefcd0000000000      | 	.quad 0xcdefab
0x1768:abefcd0000000000      | 	.quad 0xcdefab
0x1770:abefcd0000000000      | 	.quad 0xcdefab
0x1778:abefcd0000000000      | 	.quad 0xcdefab
0x1780:abefcd0000000000      | 	.quad 0xcdefab
0x1788:abefcd0000000000      | 	.quad 0xcdefab
0x1790:abefcd0000000000      | 	.quad 0xcdefab
0x1798:abefcd0000000000      | 	.quad 0xcdefab
0x17a0:abefcd0000000000      | 	.quad 0xcdefab
0x17a8:abefcd0000000000      | 	.quad 0xcdefab
0x17b0:abefcd0000000000      | 	.quad 0xcdefab
0x17b8:abefcd0000000000      | 	.quad 0xcdefab
0x17c0:abefcd0000000000      | 	.quad 0xcdefab
0x17c8:abefcd0000000000      | 	.quad 0xcdefab
0x17d0:abefcd0000000000      | 	.quad 0xcdefab
0x17d8:abefcd0000000000      | 	.quad 0xcdefab
0x17e0:abefcd0000000000      | 	.quad 0xcdefab
0x17e8:abefcd0000000000      | 	.quad 0xcdefab
0x17f0:abefcd0000000000      | 	.quad 0xcdefab
0x17f8:abefcd0000000000      | 	.quad 0xcdefab
0x1800:abefcd0000000000      | 	.quad 0xcdefab
0x1808:abefcd0000000000      | 	.quad 0xcdefab
0x1810:abefcd0000000000      | 	.quad 0xcdefab
0x1818:abefcd0000000000      | 	.quad 0xcdefab
0x1820:abefcd0000000000      | 	.quad 0xcdefab
0x1828:abefcd0000000000      | 	.quad 0xcdefab
0x1830:abefcd0000000000      | 	.quad 0xcdefab
0x1838:abefcd0000000000      | 	.quad 0xcdefab
0x1840:abefcd0000000000      | 	.quad 0xcdefab
0x1848:abefcd0000000000      | 	.quad 0xcdefab
0x1850:abefcd0000000000      | 	.quad 0xcdefab
0x1858:abefcd0000000000      | 	.quad 0xcdefab
0x1860:abefcd0000000000      | 	.quad 0xcdefab
0x1868:abefcd0000000000      | 	.quad 0xcdefab
0x1870:abefcd0000000000      | 	.quad 0xcdefab
0x1878:abefcd0000000000      | 	.quad 0xcdefab
0x1880:abefcd0000000000      | 	.quad 0xcdefab
0x1888:abefcd0000000000      | 	.quad 0xcdefab
0x1890:abefcd0000000000      | 	.quad 0xcdefab
0x1898:abefcd0000000000      | 	.quad 0xcdefab
0x18a0:abefcd0000000000      | 	.quad 0xcdefab
0x18a8:abefcd0000000000      | 	.quad 0xcdefab
0x18b0:abefcd0000000000      | 	.quad 0xcdefab
0x18b8:abefcd0000000000      | 	.quad 0xcdefab
0x18c0:abefcd0000000000      | 	.quad 0xcdefab
0x18c8:abefcd0000000000      | 	.quad 0xcdefab
0x18d0:abefcd0000000000      | 	.quad 0xcdefab
0x18d8:abefcd0000000000      | 	.quad 0xcdefab
0x18e0:abefcd0000000000      | 	.quad 0xcdefab
0x18e8:abefcd0000000000      | 	.quad 0xcdefab
0x18f0:abefcd0000000000      | 	.quad 0xcdefab
0x18f8:abefcd0000000000      | 	.quad 0xcdefab
0x1900:abefcd0000000000      | 	.quad 0xcdefab
0x1908:abefcd0000000000      | 	.quad 0xcdefab
0x1910:abefcd0000000000      | 	.quad 0xcdefab
0x1918:abefcd0000000000      | 	.quad 0xcdefab
0x1920:abefcd0000000000      | 	.quad 0xcdefab
0x1928:abefcd0000000000      | 	.quad 0xcdefab
0x1930:abefcd0000000000      | 	.quad 0xcdefab
0x1938:abefcd0000000000      | 	.quad 0xcdefab
0x1940:abefcd0000000000      | 	.quad 0xcdefab
0x1948:abefcd0000000000      | 	.quad 0xcdefab
0x1950:abefcd0000000000      | 	.quad 0xcdefab
0x1958:abefcd0000000000      | 	.quad 0xcdefab
0x1960:abefcd0000000000      | 	.quad 0xcdefab
0x1968:abefcd0000000000      | 	.quad 0xcdefab
0x1970:abefcd0000000000      | 	.quad 0xcdefab
0x1978:abefcd0000000000      | 	.quad 0xcdefab
0x1980:abefcd0000000000      | 	.quad 0xcdefab
0x1988:abefcd0000000000      | 	.quad 0xcdefab
0x1990:abefcd0000000000      | 	.quad 0xcdefab
0x1998:abefcd0000000000      | 	.quad 0xcdefab
0x19a0:abefcd0000000000      | 	.quad 0xcdefab
0x19a8:abefcd0000000000      | 	.quad 0xcdefab
0x19b0:abefcd0000000000      | 	.quad 0xcdefab
0x19b8:abefcd0000000000      | 	.quad 0xcdefab
0x19c0:abefcd0000000000      | 	.quad 0xcdefab
0x19c8:abefcd0000000000      | 	.quad 0xcdefab
0x19d0:abefcd0000000000      | 	.quad 0xcdefab
0x19d8:abefcd0000000000      | 	.quad 0xcdefab
0x19e0:abefcd0000000000      | 	.quad 0xcdefab
0x19e8:abefcd0000000000      | 	.quad 0xcdefab
0x19f0:abefcd0000000000      | 	.quad 0xcdefab
0x19f8:abefcd0000000000      | 	.quad 0xcdefab
0x1a00:abefcd0000000000      | 	.quad 0xcdefab
0x1a08:abefcd0000000000      | 	.quad 0xcdefab
0x1a10:abefcd0000000000      | 	.quad 0xcdefab
0x1a18:abefcd0000000000      | 	.quad 0xcdefab
0x1a20:abefcd0000000000      | 	.quad 0xcdefab
0x1a28:abefcd0000000000      | 	.quad 0xcdefab
0x1a30:abefcd0000000000      | 	.quad 0xcdefab
0x1a38:abefcd0000000000      | 	.quad 0xcdefab
0x1a40:abefcd0000000000      | 	.quad 0xcdefab
0x1a48:abefcd0000000000      | 	.quad 0xcdefab
0x1a50:abefcd0000000000      | 	.quad 0xcdefab
0x1a58:abefcd0000000000      | 	.quad 0xcdefab
0x1a60:abefcd0000000000      | 	.quad 0xcdefab
0x1a68:abefcd0000000000      | 	.quad 0xcdefab
0x1a70:abefcd0000000000      | 	.quad 0xcdefab
0x1a78:abefcd0000000000      | 	.quad 0xcdefab
0x1a80:abefcd0000000000      | 	.quad 0xcdefab
0x1a88:abefcd0000000000      | 	.quad 0xcdefab
0x1a90:abefcd0000000000      | 	.quad 0xcdefab
0x1a98:abefcd0000000000      | 	.quad 0xcdefab
0x1aa0:abefcd0000000000      | 	.quad 0xcdefab
0x1aa8:abefcd0000000000      | 	.quad 0xcdefab
0x1ab0:abefcd0000000000      | 	.quad 0xcdefab
0x1ab8:abefcd0000000000      | 	.quad 0xcdefab
0x1ac0:abefcd0000000000      | 	.quad 0xcdefab
0x1ac8:abefcd0000000000      | 	.quad 0xcdefab
0x1ad0:abefcd0000000000      | 	.quad 0xcdefab
0x1ad8:abefcd0000000000      | 	.quad 0xcdefab
0x1ae0:abefcd0000000000      | 	.quad 0xcdefab
0x1ae8:abefcd0000000000      | 	.quad 0xcdefab
0x1af0:abefcd0000000000      | 	.quad 0xcdefab
0x1af8:abefcd0000000000      | 	.quad 0xcdefab
0x1b00:abefcd0000000000      | 	.quad 0xcdefab
0x1b08:abefcd0000000000      | 	.quad 0xcdefab
0x1b10:abefcd0000000000      | 	.quad 0xcdefab
0x1b18:abefcd0000000000      | 	.quad 0xcdefab
0x1b20:abefcd0000000000      | 	.quad 0xcdefab
0x1b28:abefcd0000000000      | 	.quad 0xcdefab
0x1b30:abefcd0000000000      | 	.quad 0xcdefab
0x1b38:abefcd0000000000      | 	.quad 0xcdefab
0x1b40:abefcd0000000000      | 	.quad 0xcdefab
0x1b48:abefcd0000000000      | 	.quad 0xcdefab
0x1b50:abefcd0000000000      | 	.quad 0xcdefab
0x1b58:abefcd0000000000      | 	.quad 0xcdefab
0x1b60:abefcd0000000000      | 	.quad 0xcdefab
0x1b68:abefcd0000000000      | 	.quad 0xcdefab
0x1b70:abefcd0000000000      | 	.quad 0xcdefab
0x1b78:abefcd0000000000      | 	.quad 0xcdefab
0x1b80:abefcd0000000000      | 	.quad 0xcdefab
0x1b88:abefcd0000000000      | 	.quad 0xcdefab
0x1b90:abefcd0000000000      | 	.quad 0xcdefab
0x1b98:abefcd0000000000      | 	.quad 0xcdefab
0x1ba0:abefcd0000000000      | 	.quad 0xcdefab
0x1ba8:abefcd0000000000      | 	.quad 0xcdefab
0x1bb0:abefcd0000000000      | 	.quad 0xcdefab
0x1bb8:abefcd0000000000      | 	.quad 0xcdefab
0x1bc0:abefcd0000000000      | 	.quad 0xcdefab
0x1bc8:abefcd0000000000      | 	.quad 0xcdefab
0x1bd0:abefcd0000000000      | 	.quad 0xcdefab
0x1bd8:abefcd0000000000      | 	.quad 0xcdefab
0x1be0:abefcd0000000000      | 	.quad 0xcdefab
0x1be8:abefcd0000000000      | 	.quad 0xcdefab
0x1bf0:abefcd0000000000      | 	.quad 0xcdefab
0x1bf8:abefcd0000000000      | 	.quad 0xcdefab
0x1c00:abefcd0000000000      | 	.quad 0xcdefab
0x1c08:abefcd0000000000      | 	.quad 0xcdefab
0x1c10:abefcd0000000000      | 	.quad 0xcdefab
0x1c18:abefcd0000000000      | 	.quad 0xcdefab
0x1c20:abefcd0000000000      | 	.quad 0xcdefab
0x1c28:abefcd0000000000      | 	.quad 0xcdefab
0x1c30:abefcd0000000000      | 	.quad 0xcdefab
0x1c38:abefcd0000000000      | 	.quad 0xcdefab
0x1c40:abefcd0000000000      | 	.quad 0xcdefab
0x1c48:abefcd0000000000      | 	.quad 0xcdefab
0x1c50:abefcd0000000000      | 	.quad 0xcdefab
0x1c58:abefcd0000000000      | 	.quad 0xcdefab
0x1c60:abefcd0000000000      | 	.quad 0xcdefab
0x1c68:abefcd0000000000      | 	.quad 0xcdefab
0x1c70:abefcd0000000000      | 	.quad 0xcdefab
0x1c78:abefcd0000000000      | 	.quad 0xcdefab
0x1c80:abefcd0000000000      | 	.quad 0xcdefab
0x1c88:abefcd0000000000      | 	.quad 0xcdefab
0x1c90:abefcd0000000000      | 	.quad 0xcdefab
0x1c98:abefcd0000000000      | 	.quad 0xcdefab
0x1ca0:abefcd0000000000      | 	.quad 0xcdefab
0x1ca8:abefcd0000000000      | 	.quad 0xcdefab
0x1cb0:abefcd0000000000      | 	.quad 0xcdefab
0x1cb8:abefcd0000000000      | 	.quad 0xcdefab
0x1cc0:abefcd0000000000      | 	.quad 0xcdefab
0x1cc8:abefcd0000000000      | 	.quad 0xcdefab
0x1cd0:abefcd0000000000      | 	.quad 0xcdefab
0x1cd8:abefcd0000000000      | 	.quad 0xcdefab
0x1ce0:abefcd0000000000      | 	.quad 0xcdefab
0x1ce8:abefcd0000000000      | 	.quad 0xcdefab
0x1cf0:abefcd0000000000      | 	.quad 0xcdefab
0x1cf8:abefcd0000000000      | 	.quad 0xcdefab
0x1d00:abefcd0000000000      | 	.quad 0xcdefab
0x1d08:abefcd0000000000      | 	.quad 0xcdefab
0x1d10:abefcd0000000000      | 	.quad 0xcdefab
0x1d18:abefcd0000000000      | 	.quad 0xcdefab
0x1d20:abefcd0000000000      | 	.quad 0xcdefab
0x1d28:abefcd0000000000      | 	.quad 0xcdefab
0x1d30:abefcd0000000000      | 	.quad 0xcdefab
0x1d38:abefcd0000000000      | 	.quad 0xcdefab
0x1d40:abefcd0000000000      | 	.quad 0xcdefab
0x1d48:abefcd0000000000      | 	.quad 0xcdefab
0x1d50:abefcd0000000000      | 	.quad 0xcdefab
0x1d58:abefcd0000000000      | 	.quad 0xcdefab
0x1d60:abefcd0000000000      | 	.quad 0xcdefab
0x1d68:abefcd0000000000      | 	.quad 0xcdefab
0x1d70:abefcd0000000000      | 	.quad 0xcdefab
0x1d78:abefcd0000000000      | 	.quad 0xcdefab
0x1d80:abefcd0000000000      | 	.quad 0xcdefab
0x1d88:abefcd0000000000      | 	.quad 0xcdefab
0x1d90:abefcd0000000000      | 	.quad 0xcdefab
0x1d98:abefcd0000000000      | 	.quad 0xcdefab
0x1da0:abefcd0000000000      | 	.quad 0xcdefab
0x1da8:abefcd0000000000      | 	.quad 0xcdefab
0x1db0:abefcd0000000000      | 	.quad 0xcdefab
0x1db8:abefcd0000000000      | 	.quad 0xcdefab
0x1dc0:abefcd0000000000      | 	.quad 0xcdefab
0x1dc8:abefcd0000000000      | 	.quad 0xcdefab
0x1dd0:abefcd0000000000      | 	.quad 0xcdefab
0x1dd8:abefcd0000000000      | 	.quad 0xcdefab
0x1de0:abefcd0000000000      | 	.quad 0xcdefab
0x1de8:abefcd0000000000      | 	.quad 0xcdefab
0x1df0:abefcd0000000000      | 	.quad 0xcdefab
0x1df8:abefcd0000000000      | 	.quad 0xcdefab
0x1e00:abefcd0000000000      | 	.quad 0xcdefab
0x1e08:abefcd0000000000      | 	.quad 0xcdefab
0x1e10:abefcd0000000000      | 	.quad 0xcdefab
0x1e18:abefcd0000000000      | 	.quad 0xcdefab
0x1e20:abefcd0000000000      | 	.quad 0xcdefab
0x1e28:abefcd0000000000      | 	.quad 0xcdefab
0x1e30:abefcd0000000000      | 	.quad 0xcdefab
0x1e38:abefcd0000000000      | 	.quad 0xcdefab
0x1e40:abefcd0000000000      | 	.quad 0xcdefab
0x1e48:abefcd0000000000      | 	.quad 0xcdefab
0x1e50:abefcd0000000000      | 	.quad 0xcdefab
0x1e58:abefcd0000000000      | 	.quad 0xcdefab
0x1e60:abefcd0000000000      | 	.quad 0xcdefab
0x1e68:abefcd0000000000      | 	.quad 0xcdefab
0x1e70:abefcd0000000000      | 	.quad 0xcdefab
0x1e78:abefcd0000000000      | 	.quad 0xcdefab
0x1e80:abefcd0000000000      | 	.quad 0xcdefab
0x1e88:abefcd0000000000      | 	.quad 0xcdefab
0x1e90:abefcd0000000000      | 	.quad 0xcdefab
0x1e98:abefcd0000000000      | 	.quad 0xcdefab
0x1ea0:abefcd0000000000      | 	.quad 0xcdefab
0x1ea8:abefcd0000000000      | 	.quad 0xcdefab
0x1eb0:abefcd0000000000      | 	.quad 0xcdefab
0x1eb8:abefcd0000000000      | 	.quad 0xcdefab
0x1ec0:abefcd0000000000      | 	.quad 0xcdefab
0x1ec8:abefcd0000000000      | 	.quad 0xcdefab
0x1ed0:abefcd0000000000      | 	.quad 0xcdefab
0x1ed8:abefcd0000000000      | 	.quad 0xcdefab
0x1ee0:abefcd0000000000      | 	.quad 0xcdefab
0x1ee8:abefcd0000000000      | 	.quad 0xcdefab
0x1ef0:abefcd0000000000      | 	.quad 0xcdefab
0x1ef8:abefcd0000000000      | 	.quad 0xcdefab
0x1f00:abefcd0000000000      | 	.quad 0xcdefab
0x1f08:abefcd0000000000      | 	.quad 0xcdefab
0x1f10:abefcd0000000000      | 	.quad 0xcdefab
0x1f18:abefcd0000000000      | 	.quad 0xcdefab
0x1f20:abefcd0000000000      | 	.quad 0xcdefab
0x1f28:abefcd0000000000      | 	.quad 0xcdefab
0x1f30:abefcd0000000000      | 	.quad 0xcdefab
0x1f38:abefcd0000000000      | 	.quad 0xcdefab
0x1f40:abefcd0000000000      | 	.quad 0xcdefab
0x1f48:abefcd0000000000      | 	.quad 0xcdefab
0x1f50:abefcd0000000000      | 	.quad 0xcdefab
0x1f58:abefcd0000000000      | 	.quad 0xcdefab
0x1f60:abefcd0000000000      | 	.quad 0xcdefab
0x1f68:abefcd0000000000      | 	.quad 0xcdefab
0x1f70:abefcd0000000000      | 	.quad 0xcdefab
0x1f78:abefcd0000000000      | 	.quad 0xcdefab
0x1f80:abefcd0000000000      | 	.quad 0xcdefab
0x1f88:abefcd0000000000      | 	.quad 0xcdefab
0x1f90:abefcd0000000000      | 	.quad 0xcdefab
0x1f98:abefcd0000000000      | 	.quad 0xcdefab
0x1fa0:abefcd0000000000      | 	.quad 0xcdefab
0x1fa8:abefcd0000000000      | 	.quad 0xcdefab
0x1fb0:abefcd0000000000      | 	.quad 0xcdefab
0x1fb8:abefcd0000000000      | 	.quad 0xcdefab
0x1fc0:abefcd0000000000      | 	.quad 0xcdefab
0x1fc8:abefcd0000000000      | 	.quad 0xcdefab
0x1fd0:abefcd0000000000      | 	.quad 0xcdefab
0x1fd8:abefcd0000000000      | 	.quad 0xcdefab
0x1fe0:abefcd0000000000      | 	.quad 0xcdefab
0x1fe8:abefcd0000000000      | 	.quad 0xcdefab
0x1ff0:abefcd0000000000      | 	.quad 0xcdefab
0x1ff8:abefcd0000000000      | 	.quad 0xcdefab
0x2000:abefcd0000000000      | 	.quad 0xcdefab
0x2008:abefcd0000000000      | 	.quad 0xcdefab
0x2010:abefcd0000000000      | 	.quad 0xcdefab
0x2018:abefcd0000000000      | 	.quad 0xcdefab
0x2020:abefcd0000000000      | 	.quad 0xcdefab
0x2028:abefcd0000000000      | 	.quad 0xcdefab
0x2030:abefcd0000000000      | 	.quad 0xcdefab
0x2038:abefcd0000000000      | 	.quad 0xcdefab
0x2040:abefcd0000000000      | 	.quad 0xcdefab
0x2048:abefcd0000000000      | 	.quad 0xcdefab
0x2050:abefcd0000000000      | 	.quad 0xcdefab
0x2058:abefcd0000000000      | 	.quad 0xcdefab
0x2060:abefcd0000000000      | 	.quad 0xcdefab
0x2068:abefcd0000000000      | 	.quad 0xcdefab
0x2070:abefcd0000000000      | 	.quad 0xcdefab
0x2078:abefcd0000000000      | 	.quad 0xcdefab
0x2080:abefcd0000000000      | 	.quad 0xcdefab
0x2088:abefcd0000000000      | 	.quad 0xcdefab
0x2090:abefcd0000000000      | 	.quad 0xcdefab
0x2098:abefcd0000000000      | 	.quad 0xcdefab
0x20a0:abefcd0000000000      | 	.quad 0xcdefab
0x20a8:abefcd0000000000      | 	.quad 0xcdefab
0x20b0:abefcd0000000000      | 	.quad 0xcdefab
0x20b8:abefcd0000000000      | 	.quad 0xcdefab
0x20c0:abefcd0000000000      | 	.quad 0xcdefab
0x20c8:abefcd0000000000      | 	.quad 0xcdefab
0x20d0:abefcd0000000000      | 	.quad 0xcdefab
0x20d8:abefcd0000000000      | 	.quad 0xcdefab
0x20e0:abefcd0000000000      | 	.quad 0xcdefab
0x20e8:abefcd0000000000      | 	.quad 0xcdefab
0x20f0:abefcd0000000000      | 	.quad 0xcdefab
0x20f8:abefcd0000000000      | 	.quad 0xcdefab
0x2100:abefcd0000000000      | 	.quad 0xcdefab
0x2108:abefcd0000000000      | 	.quad 0xcdefab
0x2110:abefcd0000000000      | 	.quad 0xcdefab
0x2118:abefcd0000000000      | 	.quad 0xcdefab
0x2120:abefcd0000000000      | 	.quad 0xcdefab
0x2128:abefcd0000000000      | 	.quad 0xcdefab
0x2130:abefcd0000000000      | 	.quad 0xcdefab
0x2138:abefcd0000000000      | 	.quad 0xcdefab
0x2140:abefcd0000000000      | 	.quad 0xcdefab
0x2148:abefcd0000000000      | 	.quad 0xcdefab
0x2150:abefcd0000000000      | 	.quad 0xcdefab
0x2158:abefcd0000000000      | 	.quad 0xcdefab
0x2160:abefcd0000000000      | 	.quad 0xcdefab
0x2168:abefcd0000000000      | 	.quad 0xcdefab
0x2170:abefcd0000000000      | 	.quad 0xcdefab
0x2178:abefcd0000000000      | 	.quad 0xcdefab
0x2180:abefcd0000000000      | 	.quad 0xcdefab
0x2188:abefcd0000000000      | 	.quad 0xcdefab
0x2190:abefcd0000000000      | 	.quad 0xcdefab
0x2198:abefcd0000000000      | 	.quad 0xcdefab
0x21a0:abefcd0000000000      | 	.quad 0xcdefab
0x21a8:abefcd0000000000      | 	.quad 0xcdefab
0x21b0:abefcd0000000000      | 	.quad 0xcdefab
0x21b8:abefcd0000000000      | 	.quad 0xcdefab
0x21c0:abefcd0000000000      | 	.quad 0xcdefab
0x21c8:abefcd0000000000      | 	.quad 0xcdefab
0x21d0:abefcd0000000000      | 	.quad 0xcdefab
0x21d8:abefcd0000000000      | 	.quad 0xcdefab
0x21e0:abefcd0000000000      | 	.quad 0xcdefab
0x21e8:abefcd0000000000      | 	.quad 0xcdefab
0x21f0:abefcd0000000000      | 	.quad 0xcdefab
0x21f8:abefcd0000000000      | 	.quad 0xcdefab
0x2200:abefcd0000000000      | 	.quad 0xcdefab
0x2208:abefcd0000000000      | 	.quad 0xcdefab
0x2210:abefcd0000000000      | 	.quad 0xcdefab
0x2218:abefcd0000000000      | 	.quad 0xcdefab
0x2220:abefcd0000000000      | 	.quad 0xcdefab
0x2228:abefcd0000000000      | 	.quad 0xcdefab
0x2230:abefcd0000000000      | 	.quad 0xcdefab
0x2238:abefcd0000000000      | 	.quad 0xcdefab
0x2240:abefcd0000000000      | 	.quad 0xcdefab
0x2248:abefcd0000000000      | 	.quad 0xcdefab
0x2250:abefcd0000000000      | 	.quad 0xcdefab
0x2258:abefcd0000000000      | 	.quad 0xcdefab
0x2260:abefcd0000000000      | 	.quad 0xcdefab
0x2268:abefcd0000000000      | 	.quad 0xcdefab
0x2270:abefcd0000000000      | 	.quad 0xcdefab
0x2278:abefcd0000000000      | 	.quad 0xcdefab
0x2280:abefcd0000000000      | 	.quad 0xcdefab
0x2288:abefcd0000000000      | 	.quad 0xcdefab
0x2290:abefcd0000000000      | 	.quad 0xcdefab
0x2298:abefcd0000000000      | 	.quad 0xcdefab
0x22a0:abefcd0000000000      | 	.quad 0xcdefab
0x22a8:abefcd0000000000      | 	.quad 0xcdefab
0x22b0:abefcd0000000000      | 	.quad 0xcdefab
0x22b8:abefcd0000000000      | 	.quad 0xcdefab
0x22c0:abefcd0000000000      | 	.quad 0xcdefab
0x22c8:abefcd0000000000      | 	.quad 0xcdefab
0x22d0:abefcd0000000000      | 	.quad 0xcdefab
0x22d8:abefcd0000000000      | 	.quad 0xcdefab
0x22e0:abefcd0000000000      | 	.quad 0xcdefab
0x22e8:abefcd0000000000      | 	.quad 0xcdefab
0x22f0:abefcd0000000000      | 	.quad 0xcdefab
0x22f8:abefcd0000000000      | 	.quad 0xcdefab
0x2300:abefcd0000000000      | 	.quad 0xcdefab
0x2308:abefcd0000000000      | 	.quad 0xcdefab
0x2310:abefcd0000000000      | 	.quad 0xcdefab
0x2318:abefcd0000000000      | 	.quad 0xcdefab
0x2320:abefcd0000000000      | 	.quad 0xcdefab
0x2328:abefcd0000000000      | 	.quad 0xcdefab
0x2330:abefcd0000000000      | 	.quad 0xcdefab
0x2338:abefcd0000000000      | 	.quad 0xcdefab
0x2340:abefcd0000000000      | 	.quad 0xcdefab
0x2348:abefcd0000000000      | 	.quad 0xcdefab
0x2350:abefcd0000000000      | 	.quad 0xcdefab
0x2358:abefcd0000000000      | 	.quad 0xcdefab
0x2360:abefcd0000000000      | 	.quad 0xcdefab
0x2368:abefcd0000000000      | 	.quad 0xcdefab
0x2370:abefcd0000000000      | 	.quad 0xcdefab
0x2378:abefcd0000000000      | 	.quad 0xcdefab
0x2380:abefcd0000000000      | 	.quad 0xcdefab
0x2388:abefcd0000000000      | 	.quad 0xcdefab
0x2390:abefcd0000000000      | 	.quad 0xcdefab
0x2398:abefcd0000000000      | 	.quad 0xcdefab
0x23a0:abefcd0000000000      | 	.quad 0xcdefab
0x23a8:abefcd0000000000      | 	.quad 0xcdefab
0x23b0:abefcd0000000000      | 	.quad 0xcdefab
0x23b8:abefcd0000000000      | 	.quad 0xcdefab
0x23c0:abefcd0000000000      | 	.quad 0xcdefab
0x23c8:abefcd0000000000      | 	.quad 0xcdefab
0x23d0:abefcd0000000000      | 	.quad 0xcdefab
0x23d8:abefcd0000000000      | 	.quad 0xcdefab
0x23e0:abefcd0000000000      | 	.quad 0xcdefab
0x23e8:abefcd0000000000      | 	.quad 0xcdefab
0x23f0:abefcd0000000000      | 	.quad 0xcdefab
0x23f8:abefcd0000000000      | 	.quad 0xcdefab
0x2400:abefcd0000000000      | 	.quad 0xcdefab
0x2408:abefcd0000000000      | 	.quad 0xcdefab
0x2410:abefcd0000000000      | 	.quad 0xcdefab
0x2418:abefcd0000000000      | 	.quad 0xcdefab
0x2420:abefcd0000000000      | 	.quad 0xcdefab
0x2428:abefcd0000000000      | 	.quad 0xcdefab
0x2430:abefcd0000000000      | 	.quad 0xcdefab
0x2438:abefcd0000000000      | 	.quad 0xcdefab
0x2440:abefcd0000000000      | 	.quad 0xcdefab
0x2448:abefcd0000000000      | 	.quad 0xcdefab
0x2450:abefcd0000000000      | 	.quad 0xcdefab
0x2458:abefcd0000000000      | 	.quad 0xcdefab
0x2460:abefcd0000000000      | 	.quad 0xcdefab
0x2468:abefcd0000000000      | 	.quad 0xcdefab
0x2470:abefcd0000000000      | 	.quad 0xcdefab
0x2478:abefcd0000000000      | 	.quad 0xcdefab
0x2480:abefcd0000000000      | 	.quad 0xcdefab
0x2488:abefcd0000000000      | 	.quad 0xcdefab
0x2490:abefcd0000000000      | 	.quad 0xcdefab
0x2498:abefcd0000000000      | 	.quad 0xcdefab
0x24a0:abefcd0000000000      | 	.quad 0xcdefab
0x24a8:abefcd0000000000      | 	.quad 0xcdefab
0x24b0:abefcd0000000000      | 	.quad 0xcdefab
0x24b8:abefcd0000000000      | 	.quad 0xcdefab
0x24c0:abefcd0000000000      | 	.quad 0xcdefab
0x24c8:abefcd0000000000      | 	.quad 0xcdefab
0x24d0:abefcd0000000000      | 	.quad 0xcdefab
0x24d8:abefcd0000000000      | 	.quad 0xcdefab
0x24e0:abefcd0000000000      | 	.quad 0xcdefab
0x24e8:abefcd0000000000      | 	.quad 0xcdefab
0x24f0:abefcd0000000000      | 	.quad 0xcdefab
0x24f8:abefcd0000000000      | 	.quad 0xcdefab
0x2500:abefcd0000000000      | 	.quad 0xcdefab
0x2508:abefcd0000000000      | 	.quad 0xcdefab
0x2510:abefcd0000000000      | 	.quad 0xcdefab
0x2518:abefcd0000000000      | 	.quad 0xcdefab
0x2520:abefcd0000000000      | 	.quad 0xcdefab
0x2528:abefcd0000000000      | 	.quad 0xcdefab
0x2530:abefcd0000000000      | 	.quad 0xcdefab
0x2538:abefcd0000000000      | 	.quad 0xcdefab
0x2540:abefcd0000000000      | 	.quad 0xcdefab
0x2548:abefcd0000000000      | 	.quad 0xcdefab
0x2550:abefcd0000000000      | 	.quad 0xcdefab
0x2558:abefcd0000000000      | 	.quad 0xcdefab
0x2560:abefcd0000000000      | 	.quad 0xcdefab
0x2568:abefcd0000000000      | 	.quad 0xcdefab
0x2570:abefcd0000000000      | 	.quad 0xcdefab
0x2578:abefcd0000000000      | 	.quad 0xcdefab
0x2580:abefcd0000000000      | 	.quad 0xcdefab
0x2588:abefcd0000000000      | 	.quad 0xcdefab
0x2590:abefcd0000000000      | 	.quad 0xcdefab
0x2598:                      | Postdest:
0x2598:bcfade0000000000      | 	.quad 0xdefabc
                             | 
0x25a0:                      | .align 8
                             | # Run time stack
0x25a0:0000000000000000      | 	.quad 0
0x25a8:0000000000000000      | 	.quad 0
0x25b0:0000000000000000      | 	.quad 0
0x25b8:0000000000000000      | 	.quad 0
0x25c0:0000000000000000      | 	.quad 0
0x25c8:0000000000000000      | 	.quad 0
0x25d0:0000000000000000      | 	.quad 0
0x25d8:0000000000000000      | 	.quad 0
0x25e0:0000000000000000      | 	.quad 0
0x25e8:0000000000000000      | 	.quad 0
0x25f0:0000000000000000      | 	.quad 0
0x25f8:0000000000000000      | 	.quad 0
0x2600:0000000000000000      | 	.quad 0
0x2608:0000000000000000      | 	.quad 0
0x2610:0000000000000000      | 	.quad 0
0x2618:0000000000000000      | 	.quad 0
                             | 
0x2620:                      | Stack:
